apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins-master
  labels:
    app: "jenkins"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: "jenkins-master"
      annotations:
        pod.alpha.kubernetes.io/init-containers: '[
              {
                  "name": "copy-default-config",
                  "image": "rig/k8s/jenkins-master",
                  "imagePullPolicy": "IfNotPresent",
                  "command": ["cp", "-n", "/var/jenkins_config/config.xml", "/var/jenkins_home"],
                  "volumeMounts": [
                      {
                          "name": "jenkins-config",
                          "mountPath": "/var/jenkins_config"
                      },
                      {
                          "name": "jenkins-home",
                          "mountPath": "/var/jenkins_home"
                      }
                  ]
              }
          ]'
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: jenkins-master
          image: "rig/k8s/jenkins-master"
          imagePullPolicy: "IfNotPresent"
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          env:
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx512m"
            - name: ADMIN_PASSWORD
              value: admin
            - name: ADMIN_USER
              value: not_used
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            - mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
      volumes:
      - name: jenkins-config
        configMap:
          name: jenkins-config
      - name: jenkins-home
        hostPath:
              path: /Users/romansafronov/dev/tmp/k8s/jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    component: "jenkins-master"
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
    - port: 50000
      targetPort: 50000
      name: slavelistener
  selector:
    component: "jenkins-master"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-config
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>2.19.4</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>false</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@0.10">
          <name>kubernetes</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>default</name>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label></label>
              <nodeSelector></nodeSelector>
              <volumes/>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkinsci/jnlp-slave</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>256Mi</resourceRequestMemory>
                  <resourceLimitCpu>200m</resourceLimitCpu>
                  <resourceLimitMemory>256Mi</resourceLimitMemory>
                  <envVars/>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars/>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
          </templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>default</namespace>
          <jenkinsUrl>http://jenkins:8080</jenkinsUrl>
          <jenkinsTunnel>jenkins:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <nodeProperties/>
      <globalNodeProperties/>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins
spec:
  rules:
  - host: jenkins.kube.local
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins
          servicePort: 8080
