apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-public-config
  namespace: kube-system
data:
  traefik.toml: |-
    ################################################################
    # Web configuration backend
    ################################################################
    [web]
    address = ":8080"
    [kubernetes]
    namespaces = ["default"]
    # See: http://kubernetes.io/docs/user-guide/labels/#list-and-watch-filtering
    labelselector = "realm=public"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik-public-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-public-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-public-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-public-ingress-lb
        name: traefik-public-ingress-lb
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        resources:
          limits:
            cpu: 200m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        ports:
        - name: http
          containerPort: 80
          # use separate host port
          hostPort: 8888
        - name: admin
          containerPort: 8080
        volumeMounts:
          - mountPath: /etc/traefik/
            name: traefik-config
            readOnly: true
      volumes:
        - name: traefik-config
          configMap:
            name: traefik-public-config
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-public-web-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-public-ingress-lb
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-public-web-ui
  namespace: kube-system
spec:
  rules:
  - host: traefik-public.kube.local
    http:
      paths:
      - backend:
          serviceName: traefik-public-web-ui
          servicePort: 80